{"ast":null,"code":"import _slicedToArray from \"/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/src/pages/movieDetailsPage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieHeader from \"../components/headerMovie/\";\nimport MovieDetails from \"../components/movieDetails/\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getMovie, getMovieImages } from \"../api/tmdb-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\"\n    },\n    gridList: {\n      width: 450,\n      height: \"100vh\"\n    }\n  };\n});\n\nvar MoviePage = function MoviePage(props) {\n  _s();\n\n  var classes = useStyles();\n  var id = props.match.params.id;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      movie = _useState2[0],\n      setMovie = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      images = _useState4[0],\n      setImages = _useState4[1];\n\n  useEffect(function () {\n    getMovie(id).then(function (movie) {\n      setMovie(movie);\n    });\n  }, [id]);\n  useEffect(function () {\n    getMovieImages(id).then(function (images) {\n      setImages(images);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movie ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MovieHeader, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        style: {\n          padding: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root,\n            children: /*#__PURE__*/_jsxDEV(GridList, {\n              cellHeight: 500,\n              className: classes.gridList,\n              cols: 1,\n              children: images.map(function (image) {\n                return /*#__PURE__*/_jsxDEV(GridListTile, {\n                  className: classes.gridListTile,\n                  cols: 1,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://image.tmdb.org/t/p/w500/\".concat(image.file_path),\n                    alt: image.file_path\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 23\n                  }, _this)\n                }, image.file_path, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for API data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"Kb9DOWA9Qvp8i7zzNTqsiBWNaf4=\", false, function () {\n  return [useStyles];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/src/pages/movieDetailsPage.js"],"names":["React","useState","useEffect","MovieHeader","MovieDetails","Grid","makeStyles","GridList","GridListTile","getMovie","getMovieImages","useStyles","theme","root","display","flexWrap","justifyContent","gridList","width","height","MoviePage","props","classes","id","match","params","movie","setMovie","images","setImages","then","padding","map","image","gridListTile","file_path"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from \"react\";\nimport MovieHeader from \"../components/headerMovie/\";\nimport MovieDetails from \"../components/movieDetails/\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getMovie, getMovieImages } from \"../api/tmdb-api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n  },\n  gridList: {\n    width: 450,\n    height: \"100vh\",\n  },\n}));\n\nconst MoviePage = (props) => {\n  const classes = useStyles();\n  const { id } = props.match.params;\n  const [movie, setMovie] = useState(null);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    getMovie(id).then((movie) => {\n      setMovie(movie);\n    });\n  }, [id]);\n\n  useEffect(() => {\n    getMovieImages(id).then((images) => {\n      setImages(images);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  return (\n    <>\n      {movie ? (\n        <>\n          <MovieHeader movie={movie} />\n          <Grid container spacing={5} style={{ padding: \"15px\" }}>\n            <Grid item xs={3}>\n              <div className={classes.root}>\n                <GridList\n                  cellHeight={500}\n                  className={classes.gridList}\n                  cols={1}\n                >\n                  {images.map((image) => (\n                    <GridListTile\n                      key={image.file_path}\n                      className={classes.gridListTile}\n                      cols={1}\n                    >\n                      <img\n              src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n              alt={image.file_path}\n          />\n                    </GridListTile>\n                  ))}\n                </GridList>\n              </div>\n            </Grid>\n            <Grid item xs={9}>\n              <MovieDetails movie={movie} />\n            </Grid>\n          </Grid>\n        </>\n      ) : (\n        <h2>Waiting for API data</h2>\n      )}\n    </>\n  );\n};\n\nexport default MoviePage;"]},"metadata":{},"sourceType":"module"}