{"ast":null,"code":"var _jsxFileName = \"/Users/gowriswarupkailasperumal/Documents/WebAppDev2/moviesapplabs/src/components/filterMoviesCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg';\nimport { getGenres } from \"../../api/tmdb-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      maxWidth: 345,\n      backgroundColor: \"rgb(204, 204, 0)\"\n    },\n    media: {\n      height: 300\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 220,\n      backgroundColor: \"rgb(255, 255, 255)\"\n    }\n  };\n});\nexport default function FilterMoviesCard(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useQuery = useQuery(\"genres\", getGenres),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this);\n  }\n\n  var genres = data.genres;\n\n  if (genres[0].name !== \"All\") {\n    genres.unshift({\n      id: \"0\",\n      name: \"All\"\n    });\n  }\n\n  var handleChange = function handleChange(e, type, value) {\n    e.preventDefault();\n    props.onUserInput(type, value); // NEW\n  };\n\n  var handleTextChange = function handleTextChange(e, props) {\n    handleChange(e, \"name\", e.target.value);\n  };\n\n  var handleGenreChange = function handleGenreChange(e) {\n    handleChange(e, \"genre\", e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \"Filter the movies.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.formControl,\n        id: \"filled-search\",\n        label: \"Search field\",\n        type: \"search\",\n        value: props.titleFilter,\n        variant: \"filled\",\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"genre-label\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"genre-label\",\n          id: \"genre-select\",\n          value: props.genreFilter,\n          onChange: handleGenreChange,\n          children: genres.map(function (genre) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: genre.id,\n              children: genre.name\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: img,\n      title: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), \"Filter the movies.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterMoviesCard, \"vVCp5396LZJdk3seWXIlzhLQ4cs=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = FilterMoviesCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterMoviesCard\");","map":{"version":3,"sources":["/Users/gowriswarupkailasperumal/Documents/WebAppDev2/moviesapplabs/src/components/filterMoviesCard/index.js"],"names":["React","makeStyles","useQuery","Spinner","Card","CardMedia","CardContent","Typography","InputLabel","MenuItem","TextField","SearchIcon","FormControl","Select","img","getGenres","useStyles","theme","root","maxWidth","backgroundColor","media","height","formControl","margin","spacing","minWidth","FilterMoviesCard","props","classes","data","error","isLoading","isError","message","genres","name","unshift","id","handleChange","e","type","value","preventDefault","onUserInput","handleTextChange","target","handleGenreChange","titleFilter","genreFilter","map","genre"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,oDAAhB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAGA,IAAMC,SAAS,GAAGf,UAAU,CAAC,UAACgB,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,GADN;AAEJC,MAAAA,eAAe,EAAE;AAFb,KADiC;AAKvCC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALgC;AAOvCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADG;AAEXC,MAAAA,QAAQ,EAAE,GAFC;AAGXN,MAAAA,eAAe,EAAE;AAHN;AAP0B,GAAZ;AAAA,CAAD,CAA5B;AAeA,eAAe,SAASO,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAAA;;AAC5C,MAAMC,OAAO,GAAGb,SAAS,EAAzB;;AACA,kBAA4Cd,QAAQ,CAAC,QAAD,EAAWa,SAAX,CAApD;AAAA,MAAQe,IAAR,aAAQA,IAAR;AAAA,MAAcC,KAAd,aAAcA,KAAd;AAAA,MAAqBC,SAArB,aAAqBA,SAArB;AAAA,MAAgCC,OAAhC,aAAgCA,OAAhC;;AAEA,MAAID,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAMC,MAAM,GAAGL,IAAI,CAACK,MAApB;;AACA,MAAIA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,KAAmB,KAAvB,EAA6B;AAC3BD,IAAAA,MAAM,CAACE,OAAP,CAAe;AAAEC,MAAAA,EAAE,EAAE,GAAN;AAAWF,MAAAA,IAAI,EAAE;AAAjB,KAAf;AACD;;AAED,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIC,IAAJ,EAAUC,KAAV,EAAoB;AACvCF,IAAAA,CAAC,CAACG,cAAF;AACAf,IAAAA,KAAK,CAACgB,WAAN,CAAkBH,IAAlB,EAAwBC,KAAxB,EAFuC,CAEP;AACjC,GAHD;;AAKA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,CAAD,EAAIZ,KAAJ,EAAc;AACrCW,IAAAA,YAAY,CAACC,CAAD,EAAI,MAAJ,EAAYA,CAAC,CAACM,MAAF,CAASJ,KAArB,CAAZ;AACD,GAFD;;AAIA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,CAAD,EAAO;AAC/BD,IAAAA,YAAY,CAACC,CAAD,EAAI,OAAJ,EAAaA,CAAC,CAACM,MAAF,CAASJ,KAAtB,CAAZ;AACD,GAFD;;AAIF,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEb,OAAO,CAACX,IAAzB;AAA+B,IAAA,OAAO,EAAC,UAAvC;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,SAAD;AACA,QAAA,SAAS,EAAEW,OAAO,CAACN,WADnB;AAEA,QAAA,EAAE,EAAC,eAFH;AAGA,QAAA,KAAK,EAAC,cAHN;AAIA,QAAA,IAAI,EAAC,QAJL;AAKA,QAAA,KAAK,EAAEK,KAAK,CAACoB,WALb;AAMA,QAAA,OAAO,EAAC,QANR;AAOA,QAAA,QAAQ,EAAEH;AAPV;AAAA;AAAA;AAAA;AAAA,cALF,eAcE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEhB,OAAO,CAACN,WAAhC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,aADV;AAEE,UAAA,EAAE,EAAC,cAFL;AAGE,UAAA,KAAK,EAAEK,KAAK,CAACqB,WAHf;AAIE,UAAA,QAAQ,EAAEF,iBAJZ;AAAA,oBAMGZ,MAAM,CAACe,GAAP,CAAW,UAACC,KAAD,EAAW;AACrB,gCACE,QAAC,QAAD;AAAyB,cAAA,KAAK,EAAEA,KAAK,CAACb,EAAtC;AAAA,wBACGa,KAAK,CAACf;AADT,eAAee,KAAK,CAACb,EAArB;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD,WANA;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiCE,QAAC,SAAD;AACE,MAAA,SAAS,EAAET,OAAO,CAACR,KADrB;AAEE,MAAA,KAAK,EAAEP,GAFT;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAjCF,eAsCE,QAAC,WAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF,qCAGE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GA7EuBa,gB;UACJX,S,EAC4Bd,Q;;;KAFxByB,gB","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner'\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg'\nimport { getGenres } from \"../../api/tmdb-api\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"rgb(204, 204, 0)\",\n  },\n  media: { height: 300 },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220,\n    backgroundColor: \"rgb(255, 255, 255)\",\n  },\n}));\n\n\nexport default function FilterMoviesCard(props) {\n    const classes = useStyles();\n    const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\n  \n    if (isLoading) {\n      return <Spinner />;\n    }\n  \n    if (isError) {\n      return <h1>{error.message}</h1>;\n    }\n    const genres = data.genres;\n    if (genres[0].name !== \"All\"){\n      genres.unshift({ id: \"0\", name: \"All\" });\n    }\n  \n    const handleChange = (e, type, value) => {\n      e.preventDefault();\n      props.onUserInput(type, value); // NEW\n    };\n  \n    const handleTextChange = (e, props) => {\n      handleChange(e, \"name\", e.target.value);\n    };\n  \n    const handleGenreChange = (e) => {\n      handleChange(e, \"genre\", e.target.value);\n    };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          <SearchIcon fontSize=\"large\" />\n          Filter the movies.\n        </Typography>\n        <TextField\n        className={classes.formControl}\n        id=\"filled-search\"\n        label=\"Search field\"\n        type=\"search\"\n        value={props.titleFilter}\n        variant=\"filled\"\n        onChange={handleTextChange}\n        />\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\n          <Select\n            labelId=\"genre-label\"\n            id=\"genre-select\"\n            value={props.genreFilter}\n            onChange={handleGenreChange}\n            >   \n            {genres.map((genre) => {\n              return (\n                <MenuItem key={genre.id} value={genre.id}>\n                  {genre.name}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        image={img}\n        title=\"Filter\"\n      />\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          <SearchIcon fontSize=\"large\" />\n          Filter the movies.\n          <br />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}