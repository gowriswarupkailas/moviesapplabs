{"ast":null,"code":"var _jsxFileName = \"/Users/gowriswarupkailasperumal/Documents/WebAppDev2/moviesapplabs/src/pages/favoriteMoviesPage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar FavoriteMoviesPage = function FavoriteMoviesPage() {\n  _s();\n\n  var _useContext = useContext(MoviesContext),\n      movieIds = _useContext.favorites; // Create an array of queries and run in parallel.\n\n\n  var favoriteMovieQueries = useQueries(movieIds.map(function (movieId) {\n    return {\n      queryKey: [\"movie\", {\n        id: movieId\n      }],\n      queryFn: getMovie\n    };\n  })); // Check if any of the parallel queries is still loading.\n\n  var isLoading = favoriteMovieQueries.find(function (m) {\n    return m.isLoading === true;\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, _this);\n  }\n\n  var movies = favoriteMovieQueries.map(function (q) {\n    q.data.genre_ids = q.data.genres.map(function (g) {\n      return g.id;\n    });\n    return q.data;\n  });\n\n  var toDo = function toDo() {\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favorite Movies\",\n    movies: movies,\n    action: function action(movie) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RemoveFromFavorites, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(WriteReview, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FavoriteMoviesPage, \"9aU82oRUXDTHh3QLTQCcgAQlrCk=\", false, function () {\n  return [useQueries];\n});\n\n_c = FavoriteMoviesPage;\nexport default FavoriteMoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteMoviesPage\");","map":{"version":3,"sources":["/Users/gowriswarupkailasperumal/Documents/WebAppDev2/moviesapplabs/src/pages/favoriteMoviesPage.js"],"names":["React","useContext","PageTemplate","MoviesContext","useQueries","getMovie","Spinner","RemoveFromFavorites","WriteReview","FavoriteMoviesPage","movieIds","favorites","favoriteMovieQueries","map","movieId","queryKey","id","queryFn","isLoading","find","m","movies","q","data","genre_ids","genres","g","toDo","movie"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA;;AAC/B,oBAA+BR,UAAU,CAACE,aAAD,CAAzC;AAAA,MAAkBO,QAAlB,eAAOC,SAAP,CAD+B,CAG/B;;;AACA,MAAMC,oBAAoB,GAAGR,UAAU,CACrCM,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAa;AACxB,WAAO;AACLC,MAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU;AAAEC,QAAAA,EAAE,EAAEF;AAAN,OAAV,CADL;AAELG,MAAAA,OAAO,EAAEZ;AAFJ,KAAP;AAID,GALD,CADqC,CAAvC,CAJ+B,CAY/B;;AACA,MAAMa,SAAS,GAAGN,oBAAoB,CAACO,IAArB,CAA0B,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACF,SAAF,KAAgB,IAAvB;AAAA,GAA1B,CAAlB;;AAEA,MAAIA,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,MAAMG,MAAM,GAAGT,oBAAoB,CAACC,GAArB,CAAyB,UAACS,CAAD,EAAO;AAC7CA,IAAAA,CAAC,CAACC,IAAF,CAAOC,SAAP,GAAmBF,CAAC,CAACC,IAAF,CAAOE,MAAP,CAAcZ,GAAd,CAAkB,UAAAa,CAAC;AAAA,aAAIA,CAAC,CAACV,EAAN;AAAA,KAAnB,CAAnB;AACA,WAAOM,CAAC,CAACC,IAAT;AACD,GAHc,CAAf;;AAKA,MAAMI,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAM,IAAN;AAAA,GAAb;;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,MAAM,EAAEN,MAFV;AAGE,IAAA,MAAM,EAAE,gBAACO,KAAD,EAAW;AACjB,0BACE;AAAA,gCACE,QAAC,mBAAD;AAAqB,UAAA,KAAK,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA,sBADF;AAMD;AAVH;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAxCD;;GAAMnB,kB;UAIyBL,U;;;KAJzBK,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\n\nconst FavoriteMoviesPage = () => {\n  const {favorites: movieIds } = useContext(MoviesContext);\n\n  // Create an array of queries and run in parallel.\n  const favoriteMovieQueries = useQueries(\n    movieIds.map((movieId) => {\n      return {\n        queryKey: [\"movie\", { id: movieId }],\n        queryFn: getMovie,\n      };\n    })\n  );\n  // Check if any of the parallel queries is still loading.\n  const isLoading = favoriteMovieQueries.find((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const movies = favoriteMovieQueries.map((q) => {\n    q.data.genre_ids = q.data.genres.map(g => g.id)\n    return q.data\n  });\n\n  const toDo = () => true;\n\n  return (\n    <PageTemplate\n      title=\"Favorite Movies\"\n      movies={movies}\n      action={(movie) => {\n        return (\n          <>\n            <RemoveFromFavorites movie={movie} />\n            <WriteReview movie={movie} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavoriteMoviesPage;\n"]},"metadata":{},"sourceType":"module"}