{"ast":null,"code":"var _jsxFileName = \"/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/src/pages/upcomingMoviesPage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport { getUpcoming } from '../api/tmdb-api';\nimport AddToPlaylistIcon from '../components/cardIcons/addToPlaylist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UpcomingMoviesPage = function UpcomingMoviesPage(props) {\n  _s();\n\n  var _useQuery = useQuery('discover', getUpcoming),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError;\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 27\n  }, _this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }, _this);\n  var movies = data.results;\n  var favorites = movies.filter(function (m) {\n    return m.favorite;\n  });\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n  var mustWatch = movies.filter(function (m) {\n    return m.mustWatch;\n  });\n  localStorage.setItem('mustWatch', JSON.stringify(mustWatch));\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Upcoming Movies\",\n    movies: movies,\n    action: function action(movie) {\n      return /*#__PURE__*/_jsxDEV(AddToPlaylistIcon, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UpcomingMoviesPage, \"WEkr8cD0FT6502HV/Tm0hFMSrPA=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpcomingMoviesPage;\nexport default UpcomingMoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingMoviesPage\");","map":{"version":3,"sources":["/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/src/pages/upcomingMoviesPage.js"],"names":["React","PageTemplate","useQuery","Spinner","getUpcoming","AddToPlaylistIcon","UpcomingMoviesPage","props","data","error","isLoading","isError","message","movies","results","favorites","filter","m","favorite","localStorage","setItem","JSON","stringify","mustWatch","movie"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA;;AAClC,kBAA2CL,QAAQ,CAAC,UAAD,EAAaE,WAAb,CAAnD;AAAA,MAAOI,IAAP,aAAOA,IAAP;AAAA,MAAaC,KAAb,aAAaA,KAAb;AAAA,MAAoBC,SAApB,aAAoBA,SAApB;AAAA,MAA+BC,OAA/B,aAA+BA,OAA/B;;AAEA,MAAID,SAAJ,EAAe,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACf,MAAIC,OAAJ,EAAa,oBAAO;AAAA,cAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAMC,MAAM,GAAGL,IAAI,CAACM,OAApB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,MAAP,CAAc,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,QAAN;AAAA,GAAf,CAAlB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAlC;AAEA,MAAMQ,SAAS,GAAGV,MAAM,CAACG,MAAP,CAAc,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACM,SAAN;AAAA,GAAf,CAAlB;AACAJ,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeC,SAAf,CAAlC;AAEA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,MAAM,EAAEV,MAFZ;AAGI,IAAA,MAAM,EAAE,gBAACW,KAAD,EAAW;AACf,0BAAO,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAtBD;;GAAMlB,kB;UACyCJ,Q;;;KADzCI,kB;AAuBN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getUpcoming} from '../api/tmdb-api'\nimport AddToPlaylistIcon from '../components/cardIcons/addToPlaylist'\n\nconst UpcomingMoviesPage = (props) => {\n    const {data, error, isLoading, isError}  = useQuery('discover', getUpcoming)\n\n    if (isLoading) return <Spinner/>\n    if (isError) return <h1>{error.message}</h1>\n    const movies = data.results;\n\n    const favorites = movies.filter(m => m.favorite)\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n\n    const mustWatch = movies.filter(m => m.mustWatch)\n    localStorage.setItem('mustWatch', JSON.stringify(mustWatch))\n\n    return (\n        <PageTemplate\n            title=\"Upcoming Movies\"\n            movies={movies}\n            action={(movie) => {\n                return <AddToPlaylistIcon movie={movie} />\n            }}\n        />\n    );\n};\nexport default UpcomingMoviesPage;"]},"metadata":{},"sourceType":"module"}