{"ast":null,"code":"import _slicedToArray from \"/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/src/pages/homePage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // Changed\n\nimport Header from \"../components/headerMovieList\";\nimport FilterCard from \"../components/filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../components/movieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles({\n  root: {\n    padding: \"20px\"\n  }\n});\n\nvar MovieListPage = function MovieListPage(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameFilter = _useState4[0],\n      setNameFilter = _useState4[1];\n\n  var _useState5 = useState(\"0\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      genreFilter = _useState6[0],\n      setGenreFilter = _useState6[1];\n\n  var genreId = Number(genreFilter);\n  var displayedMovies = movies.filter(function (m) {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(function (m) {\n    return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  });\n\n  var handleChange = function handleChange(type, value) {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n\n  useEffect(function () {\n    fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US&include_adult=false&page=1\")).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json);\n      return json.results;\n    }).then(function (movies) {\n      setMovies(movies);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: \"Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(FilterCard, {\n          onUserInput: handleChange,\n          titleFilter: nameFilter,\n          genreFilter: genreFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, _this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: displayedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MovieListPage, \"Hy85NjgDdTz27PzIxeO3rHRqzK4=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieListPage;\nexport default MovieListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListPage\");","map":{"version":3,"sources":["/Users/gowriswarupkailasperumal/OneDrive - Waterford Institute of Technology/Year3Sem1/WebAppDev2/moviesapplabs/src/pages/homePage.js"],"names":["React","useState","useEffect","Header","FilterCard","Grid","makeStyles","MovieList","useStyles","root","padding","MovieListPage","props","classes","movies","setMovies","nameFilter","setNameFilter","genreFilter","setGenreFilter","genreId","Number","displayedMovies","filter","m","title","toLowerCase","search","genre_ids","includes","handleChange","type","value","fetch","process","env","REACT_APP_TMDB_KEY","then","res","json","results"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";  // Changed\nimport Header from \"../components/headerMovieList\";\nimport FilterCard from \"../components/filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../components/movieList\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"20px\",\n  },\n});\n\nconst MovieListPage = (props) => {\n  const classes = useStyles();\n  const [movies, setMovies] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n\n  const genreId = Number(genreFilter);\n\n  let displayedMovies = movies\n    .filter((m) => {\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n    })\n    .filter((m) => {\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n    });\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);\n    else setGenreFilter(value);\n  };\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=1`\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        // console.log(json);\n        return json.results;\n      })\n      .then((movies) => {\n        setMovies(movies);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Header title={\"Home Page\"} />\n      </Grid>\n      <Grid item container spacing={5}>\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n        <FilterCard\n      onUserInput={handleChange}\n      titleFilter={nameFilter}\n      genreFilter={genreFilter}\n    />\n        </Grid>\n        <MovieList movies={displayedMovies} />\n      </Grid>\n    </Grid>\n  );\n};\nexport default MovieListPage;"]},"metadata":{},"sourceType":"module"}